PROGRAM_NAME='nCADDXV001'
(***********************************************************)
(*  FILE CREATED ON: 08/01/2000 AT: 13:52:19               *)
(***********************************************************)
(*  FILE_LAST_MODIFIED_ON: 06/15/2003 AT: 18:14:15         *)
(***********************************************************)
(*  ORPHAN_FILE_PLATFORM: 0                                *)
(***********************************************************)
(*!!FILE REVISION: Rev 0                                   *)
(*  REVISION DATE: 05/06/2003                              *)
(*                                                         *)
(*  COMMENTS:                                              *)
(*                                                         *)
(***********************************************************)
(*!!FILE REVISION: Rev 0                                   *)
(*  REVISION DATE: 08/01/2000                              *)
(*                                                         *)
(*  COMMENTS:                                              *)
(***********************************************************)
(*!!FILE REVISION: Rev 0                                   *)
(*  REVISION DATE: 08/01/2000                              *)
(*                                                         *)
(*  COMMENTS:                                              *)
(***********************************************************)
(*}}PS_SOURCE_INFO                                         *)
(***********************************************************)

(*   DATE:07/25/00    TIME:20:07:21    *)

(***********************************************************)
(*          DEVICE NUMBER DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_DEVICE

(* AT THIS LOCATION, DEFINE THE CADDXS IN THE SYSTEM
   IN THIS WAY:
   
   IF YOU HAVE ONE CADDX IN THE SYSTEM, YOU WOULD 
   DEFINE IT IN THIS WAY:
   CA1 = DEVICE:PORT:SYSTEM, E.G.:
   CA1 = 1:1:1
   
   IF YOU HAVE TWO CADDXS IN THE SYSTEM, YOU WOULD
   DEFINE THEM IN THIS WAY:
   CA1 = 1:1:1
   CA2 = 1:2:1
   
   IF YOU HAVE THREE, YOU WOULD DEFINE THEM AS:
   CA1 = 1:1:1
   CA2 = 1:2:1
   CA3 = 1:3:1
   
   PLEASE NOTE:
   (1)  YOU CAN DEFINE THEM AS ANY ADDRESS YOU LIKE, AS
        LONG AS IT MATCHES THE PHYSICAL DEVICE ADDRESS(ES)
        OF THE CADDX(S).
   (2)  YOU MUST ALWAYS DEFINE THEM AS CA1, CA2, ETC.
   (3)  NEVER LEAVE OUT A CADDX IN THE SEQUENCE, E.G.:
        YOU WOULD NOT DEFINE CA3 BEFORE YOU HAVE DEFINED
        CA2.
   (4)  YOU CAN DEFINE UP TO A MAXIMUM OF 50 CADDXS 
        IN A SYSTEM.
   (5)  THE NUMBER OF CADDXS THAT ARE DEFINED IN THIS
        AREA SHOULD CORRESPOND 100% WITH THE CONSTANT:
        CA_NUMBER_OF_CADDXS, AND THE NUMBER OF 
        #DEFINE CA_CDx STATEMENTS LOWER DOWN IN THIS FILE.
        IF THESE ASPECTS OF THIS PROGRAM MODULE DO NOT 
        CORRESPOND, UNPREDICTABLE BEHAVIOUR IN YOUR          
        PROGRAM COULD OCCUR!                               *)
CA1 											= 5001:4:0;
VCA1											=	34004:1:0;
vROOMLOGIC_MOTION_SENSOR 	= 35001:1:0;

(*      PLEASE NOTE THAT BESIDES THIS REFERENCE TO THE 
        DEVICE ADDRESS OF THE CADDX, YOU NEVER WILL 
        CONCERN YOURSELF ABOUT THE DEVICE ADDRESS AGAIN.  
        IN OTHER WORDS, THE CADDX IS REFERENCED BY ITS 
        NUMBER, NOT ITS DEVICE ADDRESS.  FOR EXAMPLE IF 
        YOU HAVE DEFINED CADDX NUMBER 2 (WHICH IS
        CALLED CA2) TO HAVE A DEVICE ADDRESS OF 1:2:1 
        (DEVICE 1, PORT 2, SYSTEM 1), YOU WILL ONLY 
        REFERERENCE THAT CADDX BY ITS NUMBER, WHICH 
        IS THE NUMBER 2. 
        
        EXPANDING FURTHER, IF YOU WANT CADDX NUMBER 2 
        TO SWITCH TO INPUT 3, YOU WOULD CALL THE 
        SUBROUTINE LIKE THIS:
        
        "CALL 'SWITCH ALTINEX' (2,3,0)"
        
        WHERE THE CADDX NUMBER IS THE INTEGER VALUE OF 
        2. ALSO, IF YOU WOULD LIKE TO REFERENCE THE 
        SELECTED INPUT OF CADDX NUMBER 2, YOU WOULD LOOK 
        AT THE VALUE OF THE VARIABLE:
        
        "CAI[2].CA_SELECTED_INPUT"
        
        WHERE ONCE AGAIN, THE CADDX NUMBER IS THE 
        INTEGER VALUE OF 2.                                *)        

(***********************************************************)
(*               CONSTANT DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_CONSTANT

(* AT THIS LOCATION, IT IS ESSENTIAL TO HAVE A LINE SUCH 
   AS INDICATED BELOW, FOR EACH CADDX IN THE SYSTEM:

#DEFINE CA_CD1

   E.G.: IF THERE ARE 3 CADDXS IN THE SYSTEM, 
   (THE PARAMETER 'CA_NUMBER_OF_CADDXS' HAS BEEN 
   SET TO 3), THE FOLLOWING 3 LINES WOULD APPEAR BELOW:

#DEFINE CA_CD1
#DEFINE CA_CD2
#DEFINE CA_CD3
   
   (CD STANDS FOR 'COMPILER DIRECTIVE')
   THIS SHOULD ALWAYS TIE UP 100% WITH THE NUMBER OF 
   CADDXS THAT HAVE BEEN DEFINED BY THE CONSTANT
   CA_NUMBER_OF_CADDXS.
   
   ONCE AGAIN, DO NOT LEAVE A NUMBER OUT, IN OTHER WORDS,
   YOU WOULD NOT HAVE A STATEMENT:

#DEFINE CA_CD4
   
   IF YOU HAVE NOT ALREADY ENTERED ALL THE STATEMENTS

#DEFINE CA_CD1
#DEFINE CA_CD2
#DEFINE CA_CD3                                             *)

#DEFINE CA_CD1

(* WITH THIS FOLLOWING CONSTANT, YOU DEFINE THE NUMBER OF 
   CADDXS IN THE SYSTEM, E.G.: IF YOU HAVE 2 
   CADDXS IN THE SYSTEM, YOU WOULD HAVE A STATEMENT HERE
   LIKE THIS:
CA_NUMBER_OF_CADDXS = 2
   MAKE SURE THAT THIS PARAMETER TIES UP WITH THE NUMBER
   OF '#DEFINE CA_CDx' STATEMENTS ABOVE.                   *)
CA_NUMBER_OF_CADDXS              = 1
CA_INTER_COMMS_DELAY             = 1

MAX_NUMBER_OF_ZONES = 120     // = THE NUMBER OF POSSIBLE ZONES ON CADDX SYSTEM 1
MAX_NUMBER_OF_USERS = 10     // = THE NUMBER OF POSSIBLE USERS ON CADDX SYSTEM 1
MAX_NUMBER_OF_PARTITIONS = 8 // = THE NUMBER OF POSSIBLE PARTITIONS ON CADDX SYSTEM 1

(*                  DO NOT CHANGE                          *)
CA_BUFFER_SIZE                      = 150
CA_CIRCULAR_BUFFER_SIZE             = 200
(*               END OF DO NOT CHANGE                      *)

(***********************************************************)
(*              DATA TYPE DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_TYPE

(*                  DO NOT CHANGE                          *)

STRUCTURE SPLIT_PACKETS
{
	CHAR     SPLIT_PACKET_RECEIVED[100]
}

STRUCTURE ZONE_STATUS_BYTES //MESSAGE TYPE 04h
{
  INTEGER  PARTITION_MASK_BYTE
  INTEGER  ZONE_TYPE_FLAGS1_BYTE
  INTEGER  ZONE_TYPE_FLAGS2_BYTE
  INTEGER  ZONE_TYPE_FLAGS3_BYTE
  INTEGER  ZONE_CONDITION_FLAGS1_BYTE
  INTEGER  ZONE_CONDITION_FLAGS2_BYTE
}

STRUCTURE ZONE_STATUS_INFO //MESSAGE TYPE 04h
{
  INTEGER ZONE_NUMBER
  INTEGER PARTITION_1_ENABLE
  INTEGER PARTITION_2_ENABLE
  INTEGER PARTITION_3_ENABLE
  INTEGER PARTITION_4_ENABLE
  INTEGER PARTITION_5_ENABLE
  INTEGER PARTITION_6_ENABLE
  INTEGER PARTITION_7_ENABLE
  INTEGER PARTITION_8_ENABLE
  INTEGER FIRE
  INTEGER _24_HOUR
  INTEGER KEY_SWITCH
  INTEGER FOLLOWER
  INTEGER ENTRY_EXIT_DELAY_1
  INTEGER ENTRY_EXIT_DELAY_2
  INTEGER INTERIOR
  INTEGER LOCAL_ONLY
  INTEGER KEYPAD_SOUNDER
  INTEGER YELPING_SIREN
  INTEGER STEADY_SIREN
  INTEGER CHIME
  INTEGER BYPASSABLE
  INTEGER GROUP_BYPASSABLE
  INTEGER FORCE_ARMABLE
  INTEGER ENTRY_GUARD
  INTEGER FAST_LOOP_RESPONSE
  INTEGER DOUBLE_EOL_TAMPER
  INTEGER TROUBLE1
  INTEGER CROSS_ZONE
  INTEGER DIALER_DELAY
  INTEGER SWINGER_SHUTDOWN
  INTEGER RESTORABLE
  INTEGER LISTEN_IN
  INTEGER FAULTED
  INTEGER TAMPERED
  INTEGER TROUBLE2
  INTEGER BYPASSED
  INTEGER INHIBITED_FORCE_ARMED
  INTEGER LOW_BATTERY
  INTEGER LOSS_OF_SUPERVISION
  INTEGER ALARM_MEMORY
  INTEGER BYPASS_MEMORY
  INTEGER RESERVED1
  INTEGER RESERVED2
  INTEGER RESERVED3
  INTEGER RESERVED4
  INTEGER RESERVED5
  INTEGER RESERVED6
  INTEGER RESERVED7
}

STRUCTURE ZONES_SNAPSHOT_BYTES //MESSAGE TYPE 05h
{
  INTEGER		    ZONE_OFFSET_BYTE
  INTEGER             ZONE_1_AND_2_STATUS_BYTE
  INTEGER             ZONE_3_AND_4_STATUS_BYTE
  INTEGER             ZONE_5_AND_6_STATUS_BYTE
  INTEGER		    ZONE_7_AND_8_STATUS_BYTE
  INTEGER		    ZONE_9_AND_10_STATUS_BYTE
  INTEGER             ZONE_11_AND_12_STATUS_BYTE
  INTEGER		    ZONE_13_AND_14_STATUS_BYTE
  INTEGER		    ZONE_15_AND_16_STATUS_BYTE

}

STRUCTURE ZONES_SNAPSHOT //MESSAGE TYPE 05h
{
  INTEGER ZONE_OFFSET
  INTEGER ZONE_1_FAULTED
  INTEGER ZONE_1_BYPASS
  INTEGER ZONE_1_TROUBLE
  INTEGER ZONE_1_ALARM_MEMORY
  INTEGER ZONE_2_FAULTED
  INTEGER ZONE_2_BYPASS
  INTEGER ZONE_2_TROUBLE
  INTEGER ZONE_2_ALARM_MEMORY
  INTEGER ZONE_3_FAULTED
  INTEGER ZONE_3_BYPASS
  INTEGER ZONE_3_TROUBLE
  INTEGER ZONE_3_ALARM_MEMORY
  INTEGER ZONE_4_FAULTED
  INTEGER ZONE_4_BYPASS
  INTEGER ZONE_4_TROUBLE
  INTEGER ZONE_4_ALARM_MEMORY
  INTEGER ZONE_5_FAULTED
  INTEGER ZONE_5_BYPASS
  INTEGER ZONE_5_TROUBLE
  INTEGER ZONE_5_ALARM_MEMORY
  INTEGER ZONE_6_FAULTED
  INTEGER ZONE_6_BYPASS
  INTEGER ZONE_6_TROUBLE
  INTEGER ZONE_6_ALARM_MEMORY  
  INTEGER ZONE_7_FAULTED
  INTEGER ZONE_7_BYPASS
  INTEGER ZONE_7_TROUBLE
  INTEGER ZONE_7_ALARM_MEMORY
  INTEGER ZONE_8_FAULTED
  INTEGER ZONE_8_BYPASS
  INTEGER ZONE_8_TROUBLE
  INTEGER ZONE_8_ALARM_MEMORY
  INTEGER ZONE_9_FAULTED
  INTEGER ZONE_9_BYPASS
  INTEGER ZONE_9_TROUBLE
  INTEGER ZONE_9_ALARM_MEMORY
  INTEGER ZONE_10_FAULTED
  INTEGER ZONE_10_BYPASS
  INTEGER ZONE_10_TROUBLE
  INTEGER ZONE_10_ALARM_MEMORY
  INTEGER ZONE_11_FAULTED
  INTEGER ZONE_11_BYPASS
  INTEGER ZONE_11_TROUBLE
  INTEGER ZONE_11_ALARM_MEMORY
  INTEGER ZONE_12_FAULTED
  INTEGER ZONE_12_BYPASS
  INTEGER ZONE_12_TROUBLE
  INTEGER ZONE_12_ALARM_MEMORY  
  INTEGER ZONE_13_FAULTED
  INTEGER ZONE_13_BYPASS
  INTEGER ZONE_13_TROUBLE
  INTEGER ZONE_13_ALARM_MEMORY
  INTEGER ZONE_14_FAULTED
  INTEGER ZONE_14_BYPASS
  INTEGER ZONE_14_TROUBLE
  INTEGER ZONE_14_ALARM_MEMORY
  INTEGER ZONE_15_FAULTED
  INTEGER ZONE_15_BYPASS
  INTEGER ZONE_15_TROUBLE
  INTEGER ZONE_15_ALARM_MEMORY
  INTEGER ZONE_16_FAULTED
  INTEGER ZONE_16_BYPASS
  INTEGER ZONE_16_TROUBLE
  INTEGER ZONE_16_ALARM_MEMORY  
  }
  

STRUCTURE USER_INFO_REPLY_BYTES //MESSAGE TYPE 12h
{
  CHAR                PIN_DIGITS_1_AND_2_BYTE[2]
  CHAR                PIN_DIGITS_3_AND_4_BYTE[2]
  CHAR                PIN_DIGITS_5_AND_6_BYTE[2]
  INTEGER		    AUTHORITY_FLAGS_1_BYTE
  INTEGER		    AUTHORITY_FLAGS_2_BYTE
  INTEGER             AUTHORIZED_PARTITIONS_MASK_BYTE

}
  
STRUCTURE USER_INFO_REPLY //MESSAGE TYPE 12h
{
  INTEGER USER_NUMBER
  INTEGER PIN_DIGIT1
  INTEGER PIN_DIGIT2
  INTEGER PIN_DIGIT3
  INTEGER PIN_DIGIT4
  INTEGER PIN_DIGIT5
  INTEGER PIN_DIGIT6
  INTEGER RESERVED1
  INTEGER ARM_ONLY
  INTEGER ARM_ONLY_DURING_CLOSE_WINDOW
  INTEGER MASTER_OR_PROGRAM
  INTEGER ARM_OR_DISARM
  INTEGER BYPASS_ENABLE
  INTEGER OPEN_OR_CLOSE_REPORT_ENABLE
  INTEGER MUST_BE_A_ZERO
  INTEGER OUTPUT_1_ENABLE
  INTEGER OUTPUT_2_ENABLE
  INTEGER OUTPUT_3_ENABLE
  INTEGER OUTPUT_4_ENABLE
  INTEGER ARM_OR_DISARM_2
  INTEGER BYPASS_ENABLE_2
  INTEGER OPEN_OR_CLOSE_REPORT_ENABLE_2
  INTEGER MUST_BE_A_ONE
  INTEGER AUTHORISED_FOR_PARTITION1
  INTEGER AUTHORISED_FOR_PARTITION2  
  INTEGER AUTHORISED_FOR_PARTITION3
  INTEGER AUTHORISED_FOR_PARTITION4
  INTEGER AUTHORISED_FOR_PARTITION5
  INTEGER AUTHORISED_FOR_PARTITION6
  INTEGER AUTHORISED_FOR_PARTITION7
  INTEGER AUTHORISED_FOR_PARTITION8
  }
  
STRUCTURE PARTITION_STATUS_MESSAGE_BYTES //MESSAGE TYPE 06h
{

  INTEGER PARTITION_CONDITION_FLAGS1_BYTE
  INTEGER PARTITION_CONDITION_FLAGS2_BYTE
  INTEGER PARTITION_CONDITION_FLAGS3_BYTE
  INTEGER PARTITION_CONDITION_FLAGS4_BYTE
  INTEGER LAST_USER_NUMBER_BYTE
  INTEGER PARTITION_CONDITION_FLAGS5_BYTE
  INTEGER PARTITION_CONDITION_FLAGS6_BYTE
}  
  
STRUCTURE PARTITION_STATUS_MESSAGE //MESSAGE TYPE 06h
{
  INTEGER PARTITION_NUMBER
  INTEGER BYPASS_CODE_REQUIRED
  INTEGER FIRE_TROUBLE
  INTEGER FIRE
  INTEGER PULSING_BUZZER
  INTEGER TLM_FAULT_MEMORY
  INTEGER RESERVED1
  INTEGER ARMED
  INTEGER INSTANT  
  INTEGER PREVIOUS_ALARM
  INTEGER SIREN_ON
  INTEGER STEADY_SIREN_ON
  INTEGER ALARM_MEMORY
  INTEGER TAMPER
  INTEGER CANCEL_COMMAND_ENTERED
  INTEGER CODE_ENTERED
  INTEGER CANCEL_PENDING
  INTEGER RESERVED2  
  INTEGER SILENT_EXIT_ENABLED
  INTEGER ENTRYGAURD_STAYMODE
  INTEGER CHIME_MODE_ON
  INTEGER ENTRY
  INTEGER DELAY_EXPIRATION_WARNING
  INTEGER EXIT1
  INTEGER EXIT2
  INTEGER LED_EXTINGUISH 
  INTEGER CROSS_TIMING
  INTEGER RECENT_CLOSING_BEING_TIMED
  INTEGER RESERVED3
  INTEGER EXIT_ERROR_TRIGGERED
  INTEGER AUTO_HOME_INHIBITED
  INTEGER SENSOR_LOW_BATTERY
  INTEGER SENSOR_LOST_SUPERVISION
  INTEGER LAST_USER_NUMBER  
  INTEGER ZONE_BYPASSED 
  INTEGER FORCE_ARM_TRIGGERED_BY_AUTO_ARM
  INTEGER READY_TO_ARM
  INTEGER READY_TO_FORCE_ARM
  INTEGER VALID_PIN_ACCEPTED
  INTEGER CHIME_ON_SOUNDING
  INTEGER ERROR_BEEP_TRIPLE_BEEP
  INTEGER TONE_ON_ACTIVATION_TONE
  INTEGER ENTRY1 
  INTEGER OPEN_PERIOD
  INTEGER ALARM_SENT_USING_PHONE_NUMBER1
  INTEGER ALARM_SENT_USING_PHONE_NUMBER2
  INTEGER ALARM_SENT_USING_PHONE_NUMBER3
  INTEGER CANCEL_REPORT_IS_IN_THE_STACK
  INTEGER KEYSWITCH_ARMED
  INTEGER DELAY_TRIP_IN_PROGRESS_COMMON_ZONE  
  
}  

STRUCTURE PARTITIONS_SNAPSHOT_MESSAGE_BYTES //MESSAGE TYPE 07h
{

  INTEGER PARTITION1_CONDITION_FLAGS_BYTE
  INTEGER PARTITION2_CONDITION_FLAGS_BYTE
  INTEGER PARTITION3_CONDITION_FLAGS_BYTE
  INTEGER PARTITION4_CONDITION_FLAGS_BYTE
  INTEGER PARTITION5_CONDITION_FLAGS_BYTE
  INTEGER PARTITION6_CONDITION_FLAGS_BYTE
  INTEGER PARTITION7_CONDITION_FLAGS_BYTE
  INTEGER PARTITION8_CONDITION_FLAGS_BYTE
} 

STRUCTURE PARTITIONS_SNAPSHOT_MESSAGE //MESSAGE TYPE 07h
{

  INTEGER PARTITION1_VALID_PARTITION
  INTEGER PARTITION1_READY
  INTEGER PARTITION1_ARMED
  INTEGER PARTITION1_STAY_MODE
  INTEGER PARTITION1_CHIME_MODE
  INTEGER PARTITION1_ANY_ENTRY_DELAY
  INTEGER PARTITION1_ANY_EXIT_DELAY
  INTEGER PARTITION1_PREVIOUS_ALARM
  INTEGER PARTITION2_VALID_PARTITION
  INTEGER PARTITION2_READY
  INTEGER PARTITION2_ARMED
  INTEGER PARTITION2_STAY_MODE
  INTEGER PARTITION2_CHIME_MODE
  INTEGER PARTITION2_ANY_ENTRY_DELAY
  INTEGER PARTITION2_ANY_EXIT_DELAY
  INTEGER PARTITION2_PREVIOUS_ALARM
  INTEGER PARTITION3_VALID_PARTITION
  INTEGER PARTITION3_READY
  INTEGER PARTITION3_ARMED
  INTEGER PARTITION3_STAY_MODE
  INTEGER PARTITION3_CHIME_MODE
  INTEGER PARTITION3_ANY_ENTRY_DELAY
  INTEGER PARTITION3_ANY_EXIT_DELAY
  INTEGER PARTITION3_PREVIOUS_ALARM
  INTEGER PARTITION4_VALID_PARTITION
  INTEGER PARTITION4_READY
  INTEGER PARTITION4_ARMED
  INTEGER PARTITION4_STAY_MODE
  INTEGER PARTITION4_CHIME_MODE
  INTEGER PARTITION4_ANY_ENTRY_DELAY
  INTEGER PARTITION4_ANY_EXIT_DELAY
  INTEGER PARTITION4_PREVIOUS_ALARM
  INTEGER PARTITION5_VALID_PARTITION
  INTEGER PARTITION5_READY
  INTEGER PARTITION5_ARMED
  INTEGER PARTITION5_STAY_MODE
  INTEGER PARTITION5_CHIME_MODE
  INTEGER PARTITION5_ANY_ENTRY_DELAY
  INTEGER PARTITION5_ANY_EXIT_DELAY
  INTEGER PARTITION5_PREVIOUS_ALARM
  INTEGER PARTITION6_VALID_PARTITION
  INTEGER PARTITION6_READY
  INTEGER PARTITION6_ARMED
  INTEGER PARTITION6_STAY_MODE
  INTEGER PARTITION6_CHIME_MODE 
  INTEGER PARTITION6_ANY_ENTRY_DELAY
  INTEGER PARTITION6_ANY_EXIT_DELAY
  INTEGER PARTITION6_PREVIOUS_ALARM
  INTEGER PARTITION7_VALID_PARTITION
  INTEGER PARTITION7_READY
  INTEGER PARTITION7_ARMED
  INTEGER PARTITION7_STAY_MODE
  INTEGER PARTITION7_CHIME_MODE
  INTEGER PARTITION7_ANY_ENTRY_DELAY
  INTEGER PARTITION7_ANY_EXIT_DELAY
  INTEGER PARTITION7_PREVIOUS_ALARM
  INTEGER PARTITION8_VALID_PARTITION
  INTEGER PARTITION8_READY
  INTEGER PARTITION8_ARMED
  INTEGER PARTITION8_STAY_MODE
  INTEGER PARTITION8_CHIME_MODE
  INTEGER PARTITION8_ANY_ENTRY_DELAY
  INTEGER PARTITION8_ANY_EXIT_DELAY
  INTEGER PARTITION8_PREVIOUS_ALARM
} 

STRUCTURE ZONE_NAME_MESSAGE_BYTES //MESSAGE TYPE 03h
{
  INTEGER ZONE_NUMBER_BYTE
  INTEGER ZONE_NAME_CHARACTER_1_BYTE
  INTEGER ZONE_NAME_CHARACTER_2_BYTE
  INTEGER ZONE_NAME_CHARACTER_3_BYTE
  INTEGER ZONE_NAME_CHARACTER_4_BYTE
  INTEGER ZONE_NAME_CHARACTER_5_BYTE
  INTEGER ZONE_NAME_CHARACTER_6_BYTE
  INTEGER ZONE_NAME_CHARACTER_7_BYTE
  INTEGER ZONE_NAME_CHARACTER_8_BYTE
  INTEGER ZONE_NAME_CHARACTER_9_BYTE
  INTEGER ZONE_NAME_CHARACTER_10_BYTE
  INTEGER ZONE_NAME_CHARACTER_11_BYTE
  INTEGER ZONE_NAME_CHARACTER_12_BYTE
  INTEGER ZONE_NAME_CHARACTER_13_BYTE
  INTEGER ZONE_NAME_CHARACTER_14_BYTE
  INTEGER ZONE_NAME_CHARACTER_15_BYTE
  INTEGER ZONE_NAME_CHARACTER_16_BYTE

}

STRUCTURE ZONE_NAME_MESSAGE_INFO //MESSAGE TYPE 03h
{
  INTEGER ZONE_NUMBER
  CHAR ZONE_NAME_CHARACTER_1
  CHAR ZONE_NAME_CHARACTER_2
  CHAR ZONE_NAME_CHARACTER_3
  CHAR ZONE_NAME_CHARACTER_4
  CHAR ZONE_NAME_CHARACTER_5
  CHAR ZONE_NAME_CHARACTER_6
  CHAR ZONE_NAME_CHARACTER_7
  CHAR ZONE_NAME_CHARACTER_8
  CHAR ZONE_NAME_CHARACTER_9
  CHAR ZONE_NAME_CHARACTER_10
  CHAR ZONE_NAME_CHARACTER_11
  CHAR ZONE_NAME_CHARACTER_12
  CHAR ZONE_NAME_CHARACTER_13
  CHAR ZONE_NAME_CHARACTER_14
  CHAR ZONE_NAME_CHARACTER_15
  CHAR ZONE_NAME_CHARACTER_16

}

STRUCTURE INTERFACE_CONFIGURATION_MESSAGE_BYTES //MESSAGE TYPE 01h
{
  INTEGER FIRMWARE_VERSION_BYTE_1
  INTEGER FIRMWARE_VERSION_BYTE_2
  INTEGER FIRMWARE_VERSION_BYTE_3
  INTEGER FIRMWARE_VERSION_BYTE_4
  INTEGER SUPPORTED_TRANSITION_MESSAGE_FLAGS_1_BYTE
  INTEGER SUPPORTED_TRANSITION_MESSAGE_FLAGS_2_BYTE
  INTEGER SUPPORTED_REQUEST_OR_COMMAND_FLAGS_1_BYTE
  INTEGER SUPPORTED_REQUEST_OR_COMMAND_FLAGS_2_BYTE  
  INTEGER SUPPORTED_REQUEST_OR_COMMAND_FLAGS_3_BYTE  
  INTEGER SUPPORTED_REQUEST_OR_COMMAND_FLAGS_4_BYTE   

}

STRUCTURE INTERFACE_CONFIGURATION_MESSAGE_INFO //MESSAGE TYPE 01h
{
  CHAR FIRMWARE_VERSION_CHARACTER_1
  CHAR FIRMWARE_VERSION_CHARACTER_2
  CHAR FIRMWARE_VERSION_CHARACTER_3
  CHAR FIRMWARE_VERSION_CHARACTER_4
  INTEGER RESERVED1
  INTEGER INTERFACE_CONFIGURATION_MESSAGE_FLAG
  INTEGER RESERVED2
  INTEGER RESERVED3
  INTEGER ZONE_STATUS_MESSAGE_FLAG
  INTEGER ZONES_SNAPSHOT_MESSAGE_FLAG
  INTEGER PARTITION_STATUS_MESSAGE_FLAG
  INTEGER PARTITIONS_SNAPSHOT_MESSAGE_FLAG 
  INTEGER SYSTEM_STATUS_MESSAGE_FLAG  
  INTEGER X_10_MESSAGE_RECEIVED_FLAG   
  INTEGER LOG_EVENT_MESSAGE_FLAG
  INTEGER RESERVED4
  INTEGER RESERVED5
  INTEGER RESERVED6
  INTEGER RESERVED7
  INTEGER RESERVED8   
  INTEGER RESERVED9  
  INTEGER INTERFACE_CONFIGURATION_REQUEST_FLAG  
  INTEGER RESERVED10
  INTEGER ZONE_NAME_REQUEST_FLAG
  INTEGER ZONE_STATUS_REQUEST_FLAG
  INTEGER ZONES_SNAPSHOT_REQUEST_FLAG
  INTEGER PARTITION_STATUS_REQUEST_FLAG
  INTEGER PARTITIONS_SNAPSHOT_REQUEST_FLAG
  INTEGER SYSTEM_STATUS_REQUEST_FLAG  
  INTEGER SEND_X_10_MESSAGE_FLAG  
  INTEGER LOG_EVENT_REQUEST_FLAG
  INTEGER RESERVED11
  INTEGER RESERVED12
  INTEGER RESERVED13
  INTEGER RESERVED14
  INTEGER RESERVED15  
  INTEGER PROGRAM_DATA_REQUEST_FLAG  
  INTEGER PROGRAM_DATA_COMMAND_FLAG  
  INTEGER USER_INFORMATION_REQUEST_WITH_PIN_FLAG
  INTEGER USER_INFORMATION_REQUEST_WITHOUT_PIN_FLAG
  INTEGER SET_USER_CODE_COMMAND_WITH_PIN_FLAG
  INTEGER SET_USER_CODE_COMMAND_WITHOUT_PIN_FLAG
  INTEGER SET_USER_AUTHORIZATION_COMMAND_WITH_PIN_FLAG
  INTEGER SET_USER_AUTHORIZATION_COMMAND_WITHOUT_PIN_FLAG 
  INTEGER RESERVED16  
  INTEGER RESERVED17  
  INTEGER STORE_COMMUNICATION_EVENT_COMMAND_FLAG
  INTEGER SET_CLOCK_OR_CALENDAR_COMMAND_FLAG
  INTEGER PRIMARY_KEYPAD_FUNCTION_WITH_PIN_FLAG
  INTEGER PRIMARY_KEYPAD_FUNCTION_WITHOUT_PIN_FLAG
  INTEGER SECONDARY_KEYPAD_FUNCTION_FLAG
  INTEGER ZONE_BYPASS_TOGGLE_FLAG  
}

STRUCTURE LOG_EVENT_MESSAGE_BYTES //MESSAGE TYPE 0Ah
{
  INTEGER EVENT_NUMBER_BYTE
  INTEGER TOTAL_LOG_SIZE_BYTE 
  INTEGER EVENT_TYPE_BYTE
  INTEGER ZONE_OR_USER_OR_DEVICE_NUMBER_BYTE
  INTEGER PARTITION_NUMBER_BYTE
  INTEGER MONTH_BYTE
  INTEGER DAY_BYTE
  INTEGER HOUR_BYTE  
  INTEGER MINUTE_BYTE     
}

STRUCTURE LOG_EVENT_MESSAGE_INFO //MESSAGE TYPE 0Ah
{
  INTEGER EVENT_NUMBER
  INTEGER TOTAL_LOG_SIZE 
  CHAR    EVENT_TYPE[100]
  INTEGER ZONE_NUMBER
  INTEGER USER_NUMBER
  INTEGER DEVICE_NUMBER
  INTEGER PARTITION_NUMBER
  INTEGER MONTH_INFO
  INTEGER DAY_INFO
  INTEGER HOUR_INFO
  INTEGER MINUTE_INFO   
}

STRUCTURE SYSTEM_STATUS_MESSAGE_BYTES //MESSAGE TYPE 08h
{
  INTEGER PANEL_ID_NUMBER_BYTE 
  INTEGER BYTE_3
  INTEGER BYTE_4
  INTEGER BYTE_5
  INTEGER BYTE_6
  INTEGER BYTE_7
  INTEGER BYTE_8  
  INTEGER BYTE_9  
  INTEGER BYTE_10
  INTEGER BYTE_11
  INTEGER BYTE_12
  
}

STRUCTURE SYSTEM_STATUS_MESSAGE_INFO //MESSAGE TYPE 08h
{
  INTEGER PANEL_ID_NUMBER
  INTEGER LINE_SEIZURE
  INTEGER OFF_HOOK 
  INTEGER INITIAL_HANDSHAKE_RECEIVED
  INTEGER DOWNLOAD_IN_PROGRESS
  INTEGER DIALER_DELAY_IN_PROGRESS
  INTEGER USING_BACKUP_PHONE
  INTEGER LISTEN_IN_ACTIVE
  INTEGER TWO_WAY_LOCKOUT
  INTEGER GROUND_FAULT
  INTEGER PHONE_FAULT 
  INTEGER FAIL_TO_COMMUNICATE
  INTEGER FUSE_FAULT
  INTEGER BOX_TAMPER
  INTEGER SIREN_TAMPER_OR_TROUBLE
  INTEGER LOW_BATTERY
  INTEGER AC_FAIL  
  INTEGER EXPANDER_BOX_TAMPER
  INTEGER EXPANDER_AC_FAILURE 
  INTEGER EXPANDER_LOW_BATTERY
  INTEGER EXPANDER_LOSS_OF_SUPERVISION
  INTEGER EXPANDER_AUXILIARY_OUTPUT_OVER_CURRENT
  INTEGER AUXILIARY_COMMUNICATION_CHANNEL_FAILURE
  INTEGER EXPANDER_BELL_FAULT
  INTEGER RESERVED1  
  INTEGER SIX_DIGIT_PIN_ENABLED
  INTEGER PROGRAMMING_TOKEN_IN_USE 
  INTEGER PIN_REQUIRED_FOR_LOCAL_DOWNLOAD
  INTEGER GLOBAL_PULSING_BUZZER
  INTEGER GLOBAL_SIREN_ON
  INTEGER GLOBAL_STEADY_SIREN
  INTEGER BUS_DEVICE_HAS_LINE_SEIZED
  INTEGER BUS_DEVICE_HAS_REQUESTED_SNIFF_MODE 
  INTEGER DYNAMIC_BATTERY_TEST
  INTEGER AC_POWER_ON 
  INTEGER LOW_BATTERY_MEMORY
  INTEGER GROUND_FAULT_MEMORY
  INTEGER FIRE_ALARM_VERIFICATION_BEING_TIMED
  INTEGER SMOKE_POWER_RESET
  INTEGER FIFTY_HZ_LINE_POWER_DETECTED
  INTEGER TIMING_A_HIGH_VOLTAGE_BATTERY_CHARGE
  INTEGER COMMUNICATION_SINCE_LAST_AUTOTEST
  INTEGER POWER_UP_DELAY_IN_PROGRESS 
  INTEGER WALK_TEST_MODE
  INTEGER LOSS_OF_SYSTEM_TIME
  INTEGER ENROLL_REQUESTED
  INTEGER TEST_FIXTURE_MODE
  INTEGER CONTROL_SHUTDOWN_MODE
  INTEGER TIMING_A_CANCEL_WINDOW
  INTEGER RESERVED2
  INTEGER RESERVED3 
  INTEGER RESERVED4
  INTEGER RESERVED5
  INTEGER RESERVED6
  INTEGER RESERVED7
  INTEGER RESERVED8
  INTEGER CALL_BACK_IN_PROGRESS 
  INTEGER PHONE_LINE_FAULTED
  INTEGER VOLTAGE_PRESENT_INTERRUPT_ACTIVE 
  INTEGER HOUSE_PHONE_OFF_HOOK
  INTEGER PHONE_LINE_MONITOR_ENABLED
  INTEGER SNIFFING
  INTEGER LAST_READ_WAS_OFF_HOOK
  INTEGER LISTEN_IN_REQUESTED
  INTEGER LISTEN_IN_TRIGGER  
  INTEGER VALID_PARTITION_1
  INTEGER VALID_PARTITION_2 
  INTEGER VALID_PARTITION_3
  INTEGER VALID_PARTITION_4
  INTEGER VALID_PARTITION_5
  INTEGER VALID_PARTITION_6
  INTEGER VALID_PARTITION_7
  INTEGER VALID_PARTITION_8  
  INTEGER COMMUNICATOR_STACK_POINTER
  
}

STRUCTURE CA_ALARM_INFORMATION
{
  INTEGER CA_ONLINE
}

STRUCTURE CA_DIAGNOSTICS
{
  INTEGER CA_ONLINE
  INTEGER CA_NUMBER_OF_COMMS_RETRIES
  INTEGER CA_NUMBER_OF_COMMS_FAILURES
  INTEGER CA_CIRCULAR_POINTER
  CHAR    CA_LAST_ONLINE_DATE[10]
  CHAR    CA_LAST_ONLINE_TIME[10]
  CHAR    CA_LAST_OFFLINE_DATE[10]
  CHAR    CA_LAST_OFFLINE_TIME[10]
  CHAR    CA_DATE_OF_COMMS_FAILURE[20][10]
  CHAR    CA_TICA_OF_COMMS_FAILURE[20][10]
}

STRUCTURE CA_INFORMATION
{
  INTEGER CA_NUMBER_OF_ZONES
  INTEGER CA_NUMBER_OF_USERS
  INTEGER CA_NUMBER_OF_PARTITIONS  
  INTEGER CA_DEBUG
  INTEGER CA_TYPE
  INTEGER CA_FINISHED
  INTEGER CA_DTR
  INTEGER CA_ITR
  INTEGER CA_IN_POINTER
  INTEGER CA_OUT_POINTER
  INTEGER CA_OUT_POINTER_MEMORY
  INTEGER CA_WATCH_DOG
  INTEGER CA_SPONT_DETECTED
  INTEGER CA_PROCESS_SPONT_FBACK
  INTEGER CA_PROCESSED_SPONT_FBACK
  INTEGER CA_STORE_GET_VALUE
  INTEGER CA_MAX_PERIOD
  INTEGER CA_VALID_FEEDBACK
  INTEGER CA_LINKED_STATE[CA_CIRCULAR_BUFFER_SIZE]
  INTEGER CA_FEEDBACK_FLAG[CA_CIRCULAR_BUFFER_SIZE]
  INTEGER CA_RX_MODE
  INTEGER CA_USED_LAST_PIECE_OF_BUFFER
  INTEGER CA_CODE_SEND_WINDOW
  INTEGER CA_OFFLINE_COUNT
  CHAR    CA_BUFFER[CA_BUFFER_SIZE]
  CHAR    CA_LAST_PIECE_OF_BUFFER[CA_BUFFER_SIZE]
  CHAR    CA_DATE_OF_LAST_SEND_RX[CA_BUFFER_SIZE]
  CHAR    CA_TIME_OF_LAST_SEND_RX[CA_BUFFER_SIZE]
  CHAR    CA_LAST_ONLINE_DATE[CA_BUFFER_SIZE]
  CHAR    CA_LAST_ONLINE_TIME[CA_BUFFER_SIZE]
  CHAR    CA_LAST_OFFLINE_DATE[CA_BUFFER_SIZE]
  CHAR    CA_LAST_OFFLINE_TIME[CA_BUFFER_SIZE]
  CHAR    CA_SPONT_FEEDBACK[CA_BUFFER_SIZE]
  CHAR    CA_CODE_TO_SEND[CA_CIRCULAR_BUFFER_SIZE][CA_BUFFER_SIZE]
}
(*               END OF DO NOT CHANGE                      *)
  
(***********************************************************)
(*               VARIABLE DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_VARIABLE
(*                  DO NOT CHANGE                          *)
CA_INFORMATION CAI[CA_NUMBER_OF_CADDXS]
CA_DIAGNOSTICS CADI[CA_NUMBER_OF_CADDXS]
DEV CAD[]   = 
    { 
      #IF_DEFINED CA_CD1   CA1  #END_IF
      #IF_DEFINED CA_CD2  ,CA2  #END_IF
      #IF_DEFINED CA_CD3  ,CA3  #END_IF
      #IF_DEFINED CA_CD4  ,CA4  #END_IF
      #IF_DEFINED CA_CD5  ,CA5  #END_IF
      #IF_DEFINED CA_CD6  ,CA6  #END_IF
      #IF_DEFINED CA_CD7  ,CA7  #END_IF
      #IF_DEFINED CA_CD8  ,CA8  #END_IF
      #IF_DEFINED CA_CD9  ,CA9  #END_IF
      #IF_DEFINED CA_CD10 ,CA10 #END_IF
      #IF_DEFINED CA_CD11 ,CA11 #END_IF
      #IF_DEFINED CA_CD12 ,CA12 #END_IF
      #IF_DEFINED CA_CD13 ,CA13 #END_IF
      #IF_DEFINED CA_CD14 ,CA14 #END_IF
      #IF_DEFINED CA_CD15 ,CA15 #END_IF
      #IF_DEFINED CA_CD16 ,CA16 #END_IF
      #IF_DEFINED CA_CD17 ,CA17 #END_IF
      #IF_DEFINED CA_CD18 ,CA18 #END_IF
      #IF_DEFINED CA_CD19 ,CA19 #END_IF
      #IF_DEFINED CA_CD20 ,CA20 #END_IF
      #IF_DEFINED CA_CD21 ,CA21 #END_IF
      #IF_DEFINED CA_CD22 ,CA22 #END_IF
      #IF_DEFINED CA_CD23 ,CA23 #END_IF
      #IF_DEFINED CA_CD24 ,CA24 #END_IF
      #IF_DEFINED CA_CD25 ,CA25 #END_IF
      #IF_DEFINED CA_CD26 ,CA26 #END_IF
      #IF_DEFINED CA_CD27 ,CA27 #END_IF
      #IF_DEFINED CA_CD28 ,CA28 #END_IF
      #IF_DEFINED CA_CD29 ,CA29 #END_IF
      #IF_DEFINED CA_CD30 ,CA30 #END_IF
      #IF_DEFINED CA_CD31 ,CA31 #END_IF
      #IF_DEFINED CA_CD32 ,CA32 #END_IF
      #IF_DEFINED CA_CD33 ,CA33 #END_IF
      #IF_DEFINED CA_CD34 ,CA34 #END_IF
      #IF_DEFINED CA_CD35 ,CA35 #END_IF
      #IF_DEFINED CA_CD36 ,CA36 #END_IF
      #IF_DEFINED CA_CD37 ,CA37 #END_IF
      #IF_DEFINED CA_CD38 ,CA38 #END_IF
      #IF_DEFINED CA_CD39 ,CA39 #END_IF
      #IF_DEFINED CA_CD40 ,CA40 #END_IF
      #IF_DEFINED CA_CD41 ,CA41 #END_IF
      #IF_DEFINED CA_CD42 ,CA42 #END_IF
      #IF_DEFINED CA_CD43 ,CA43 #END_IF
      #IF_DEFINED CA_CD44 ,CA44 #END_IF
      #IF_DEFINED CA_CD45 ,CA45 #END_IF
      #IF_DEFINED CA_CD46 ,CA46 #END_IF
      #IF_DEFINED CA_CD47 ,CA47 #END_IF
      #IF_DEFINED CA_CD48 ,CA48 #END_IF
      #IF_DEFINED CA_CD49 ,CA49 #END_IF
      #IF_DEFINED CA_CD50 ,CA50 #END_IF
    }
    
    
NON_VOLATILE ZONE_STATUS_INFO ZONE_STATUS_INFO_ARRAY[CA_NUMBER_OF_CADDXS][MAX_NUMBER_OF_ZONES]

NON_VOLATILE ZONE_STATUS_BYTES ZONE_STATUS_INFO_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE ZONES_SNAPSHOT ZONES_SNAPSHOT_INFO[CA_NUMBER_OF_CADDXS]

NON_VOLATILE ZONES_SNAPSHOT_BYTES ZONES_SNAPSHOT_INFO_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE USER_INFO_REPLY USER_INFO_ARRAY[CA_NUMBER_OF_CADDXS][MAX_NUMBER_OF_USERS]

NON_VOLATILE USER_INFO_REPLY_BYTES USER_INFO_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE PARTITION_STATUS_MESSAGE PARTITION_STATUS_ARRAY[CA_NUMBER_OF_CADDXS][MAX_NUMBER_OF_PARTITIONS] 

NON_VOLATILE PARTITION_STATUS_MESSAGE_BYTES PARTITION_STATUS_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE PARTITIONS_SNAPSHOT_MESSAGE_BYTES PARTITIONS_SNAPSHOT_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE PARTITIONS_SNAPSHOT_MESSAGE PARTITIONS_SNAPSHOT_INFO[CA_NUMBER_OF_CADDXS]

NON_VOLATILE ZONE_NAME_MESSAGE_BYTES ZONE_NAME_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE ZONE_NAME_MESSAGE_INFO ZONE_NAME_INFO_ARRAY[CA_NUMBER_OF_CADDXS][MAX_NUMBER_OF_ZONES]

NON_VOLATILE INTERFACE_CONFIGURATION_MESSAGE_BYTES INTERFACE_CONFIGURATION_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE INTERFACE_CONFIGURATION_MESSAGE_INFO INTERFACE_CONFIGURATION_INFO[CA_NUMBER_OF_CADDXS]

LOG_EVENT_MESSAGE_BYTES LOG_EVENT_BYTES[CA_NUMBER_OF_CADDXS]

LOG_EVENT_MESSAGE_INFO LOG_EVENT_INFO_ARRAY[CA_NUMBER_OF_CADDXS][185]// NB !!! '185' IS THE TOTAL NUMBR OF LOG ENTRIES ALLOWED ON CADDX SYSTEM

NON_VOLATILE SYSTEM_STATUS_MESSAGE_BYTES SYSTEM_STATUS_BYTES[CA_NUMBER_OF_CADDXS]

NON_VOLATILE SYSTEM_STATUS_MESSAGE_INFO SYSTEM_STATUS_INFO[CA_NUMBER_OF_CADDXS]

PERSISTENT   SPLIT_PACKET_COUNT

PERSISTENT SPLIT_PACKETS SPLIT_PACKETS_ARRAY[50]
    
(*               END OF DO NOT CHANGE                      *)

(***********************************************************)
(*               LATCHING DEFINITIONS GO BELOW             *)
(***********************************************************)
DEFINE_LATCHING

(***********************************************************)
(*       MUTUALLY EXCLUSIVE DEFINITIONS GO BELOW           *)
(***********************************************************)
DEFINE_MUTUALLY_EXCLUSIVE

(***********************************************************)
(*           SUBROUTINE DEFINITIONS GO BELOW               *)
(***********************************************************)

(***********************************************************)
(*                STARTUP CODE GOES BELOW                  *)
(***********************************************************)
DEFINE_START
(*                  DO NOT CHANGE                          *)
#IF_DEFINED CA_CD1
  CREATE_BUFFER CAD[1],CAI[1].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD2
  CREATE_BUFFER CAD[2],CAI[2].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD3
  CREATE_BUFFER CAD[3],CAI[3].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD4
  CREATE_BUFFER CAD[4],CAI[4].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD5
  CREATE_BUFFER CAD[5],CAI[5].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD6
  CREATE_BUFFER CAD[6],CAI[6].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD7
  CREATE_BUFFER CAD[7],CAI[7].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD8
  CREATE_BUFFER CAD[8],CAI[8].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD9
  CREATE_BUFFER CAD[9],CAI[9].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD10
  CREATE_BUFFER CAD[10],CAI[10].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD11
  CREATE_BUFFER CAD[11],CAI[11].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD12
  CREATE_BUFFER CAD[12],CAI[12].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD13
  CREATE_BUFFER CAD[13],CAI[13].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD14
  CREATE_BUFFER CAD[14],CAI[14].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD15
  CREATE_BUFFER CAD[15],CAI[15].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD16
  CREATE_BUFFER CAD[16],CAI[16].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD17
  CREATE_BUFFER CAD[17],CAI[17].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD18
  CREATE_BUFFER CAD[18],CAI[18].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD19
  CREATE_BUFFER CAD[19],CAI[19].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD20
  CREATE_BUFFER CAD[20],CAI[20].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD21
  CREATE_BUFFER CAD[21],CAI[21].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD22
  CREATE_BUFFER CAD[22],CAI[22].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD23
  CREATE_BUFFER CAD[23],CAI[23].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD24
  CREATE_BUFFER CAD[24],CAI[24].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD25
  CREATE_BUFFER CAD[25],CAI[25].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD26
  CREATE_BUFFER CAD[26],CAI[26].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD27
  CREATE_BUFFER CAD[27],CAI[27].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD28
  CREATE_BUFFER CAD[28],CAI[28].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD29
  CREATE_BUFFER CAD[29],CAI[29].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD30
  CREATE_BUFFER CAD[30],CAI[30].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD31
  CREATE_BUFFER CAD[31],CAI[31].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD32
  CREATE_BUFFER CAD[32],CAI[32].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD33
  CREATE_BUFFER CAD[33],CAI[33].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD34
  CREATE_BUFFER CAD[34],CAI[34].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD35
  CREATE_BUFFER CAD[35],CAI[35].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD36
  CREATE_BUFFER CAD[36],CAI[36].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD37
  CREATE_BUFFER CAD[37],CAI[37].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD38
  CREATE_BUFFER CAD[38],CAI[38].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD39
  CREATE_BUFFER CAD[39],CAI[39].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD40
  CREATE_BUFFER CAD[40],CAI[40].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD41
  CREATE_BUFFER CAD[41],CAI[41].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD42
  CREATE_BUFFER CAD[42],CAI[42].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD43
  CREATE_BUFFER CAD[43],CAI[43].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD44
  CREATE_BUFFER CAD[44],CAI[44].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD45
  CREATE_BUFFER CAD[45],CAI[45].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD46
  CREATE_BUFFER CAD[46],CAI[46].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD47
  CREATE_BUFFER CAD[47],CAI[47].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD48
  CREATE_BUFFER CAD[48],CAI[48].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD49
  CREATE_BUFFER CAD[49],CAI[49].CA_BUFFER
#END_IF
#IF_DEFINED CA_CD50
  CREATE_BUFFER CAD[50],CAI[50].CA_BUFFER
#END_IF
(*               END OF DO NOT CHANGE                      *)

(* WITH THE FOLLOWING FLAG, YOU SET THE CA_DEBUG FLAG ON OR 
   OFF FOR EACH CADDX.  THIS ENABLES, OR DISABLES 
   DEBUGGING MESSAGES USING SEND_STRING 0 COMMANDS.
   A LINE SHOULD EXIST FOR EACH CADDX, TURNING THE 
   RESPECTIVE DEBUG VARIABLE ON OR OFF, DEPENDING ON WHICH
   CADDX(S) YOU WOULD LIKE TO MONITOR USING DEBUG
   TEXT. AN EXAMPLE FOR A SYSTEM HAVING TWO CADDXS
   WOULD BE:
OFF[CAI[1].CA_DEBUG]
OFF[CAI[2].CA_DEBUG]                                       *)

ON[CAI[1].CA_DEBUG]

CAI[1].CA_NUMBER_OF_ZONES = 120         //NUMBER OF ZONES PROGRAMMED ON CADDX SYSTEM 1  
CAI[1].CA_NUMBER_OF_USERS = 1          //NUMBER OF USERS PROGRAMMED ON CADDX SYSTEM 1            
CAI[1].CA_NUMBER_OF_PARTITIONS = 1     //NUMBER OF PARTITIONS PROGRAMMED ON CADDX SYSTEM 1

(***********************************************************)
(*                THE EVENTS GOES BELOW                    *)
(***********************************************************)
DEFINE_EVENT

(***********************************************************)
(*            THE ACTUAL PROGRAM GOES BELOW                *)
(***********************************************************)

DEFINE_PROGRAM

(***********************************************************)
(*                     END OF PROGRAM                      *)
(*        DO NOT PUT ANY CODE BELOW THIS COMMENT           *)
(***********************************************************)